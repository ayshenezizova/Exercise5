{"version":3,"names":[],"mappings":"","sources":["_mixin.scss"],"sourcesContent":["//-------------------- Font size Rem conversion --------//\r\n@function calculateRem($size) {\r\n    $remSize: $size / 16px;\r\n    @return #{$remSize}rem;\r\n  }\r\n  \r\n  @mixin fontSize($size) {\r\n    font-size: $size; //Fallback in px\r\n    font-size: calculateRem($size);\r\n  }\r\n  \r\n  //-------------------- Border radius --------------------//\r\n  @mixin border-radius($top, $right, $bottom, $left) {\r\n    -webkit-border-radius: $top $right $bottom $left;\r\n    -moz-border-radius: $top $right $bottom $left;\r\n    -ms-border-radius: $top $right $bottom $left;\r\n    border-radius: $top $right $bottom $left;\r\n  }\r\n  \r\n  @mixin border-radius($radius) {\r\n    -webkit-border-radius: $radius;\r\n    -moz-border-radius: $radius;\r\n    -ms-border-radius: $radius;\r\n    border-radius: $radius;\r\n  }\r\n  \r\n  //-------------------- Transition --------------------//\r\n  @mixin transition-default($what: all, $length: 0.3s, $easing: \"\") {\r\n    @if ($what==transform) {\r\n      @if ($easing != \"\") {\r\n        -moz-transition: -moz-transform $length $easing;\r\n        -o-transition: -o-transform $length $easing;\r\n        -webkit-transition: -webkit-transform $length $easing;\r\n        -ms-transition: -ms-transform $length $easing;\r\n        transition: transform $length $easing;\r\n      } @else {\r\n        -moz-transition: -moz-transform $length;\r\n        -o-transition: -o-transform $length;\r\n        -webkit-transition: -webkit-transform $length;\r\n        -ms-transition: -ms-transform $length;\r\n        transition: transform $length;\r\n      }\r\n    } @else {\r\n      @if ($easing != \"\") {\r\n        -moz-transition: $what $length $easing;\r\n        -o-transition: $what $length $easing;\r\n        -webkit-transition: $what $length $easing;\r\n        -ms-transition: $what $length $easing;\r\n        transition: $what $length $easing;\r\n      } @else {\r\n        -moz-transition: $what $length ease-in-out;\r\n        -o-transition: $what $length ease-in-out;\r\n        -webkit-transition: $what $length ease-in-out;\r\n        -ms-transition: $what $length ease-in-out;\r\n        transition: $what $length ease-in-out;\r\n      }\r\n    }\r\n  }\r\n  \r\n  @mixin transition-default-cubic-bezier(\r\n    $what: all,\r\n    $length: 0.3s cubic-bezier(0.77, 0, 0.175, 1)\r\n  ) {\r\n    -webkit-transition: $what $length;\r\n    -moz-transition: $what $length;\r\n    -ms-transition: $what $length;\r\n    -o-transition: $what $length;\r\n    transition: $what $length;\r\n  }\r\n  \r\n  //-------------------- Transform, Translate3d, TranslateX, TranslateY, Rotate --------------------//\r\n  @mixin transform($params) {\r\n    -webkit-transform: $params;\r\n    -moz-transform: $params;\r\n    -ms-transform: $params;\r\n    -o-transform: $params;\r\n    transform: $params;\r\n  }\r\n  \r\n  @mixin translate3d($val, $val2, $val3) {\r\n    -webkit-transform: translate3d($val, $val2, $val3);\r\n    -ms-transform: translate3d($val, $val2, $val3);\r\n    -o-transform: translate3d($val, $val2, $val3);\r\n    transform: translate3d($val, $val2, $val3);\r\n  }\r\n  \r\n  @mixin translateX($val...) {\r\n    -webkit-transform: translateX($val);\r\n    -ms-transform: translateX($val);\r\n    -o-transform: translateX($val);\r\n    transform: translateX($val);\r\n  }\r\n  \r\n  @mixin translateY($val...) {\r\n    -webkit-transform: translateY($val);\r\n    -ms-transform: translateY($val);\r\n    -o-transform: translateY($val);\r\n    transform: translateY($val);\r\n  }\r\n  \r\n  @mixin rotate($val) {\r\n    -webkit-transform: rotate($val);\r\n    -moz-transform: rotate($val);\r\n    -ms-transform: rotate($val);\r\n    -o-transform: rotate($val);\r\n    transform: rotate($val);\r\n  }\r\n  \r\n  @mixin perspective($val) {\r\n    -webkit-perspective: $val;\r\n    -moz-perspective: $val;\r\n    -ms-perspective: $val;\r\n    perspective: $val;\r\n  }\r\n  \r\n  //-------------------- Background-size --------------------//\r\n  @mixin background-size($background-size) {\r\n    -webkit-background-size: $background-size;\r\n    -moz-background-size: $background-size;\r\n    -o-background-size: $background-size;\r\n    background-size: $background-size;\r\n  }\r\n  \r\n  //-------------------- Gradients --------------------//\r\n  @mixin linear-gradient($from, $to) {\r\n    background: $to;\r\n    background: -moz-linear-gradient(to right, $from 0%, $to 100%);\r\n    background: -webkit-gradient(\r\n      to right,\r\n      color-stop(0%, $from),\r\n      color-stop(100%, $to)\r\n    );\r\n    background: -webkit-linear-gradient(to right, $from 0%, $to 100%);\r\n    background: -o-linear-gradient(to right, $from 0%, $to 100%);\r\n    background: linear-gradient(to right, $from 0%, $to 100%);\r\n    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$from}, endColorstr=#{$to});\r\n  }\r\n  \r\n  @mixin background-gradient($start-color, $end-color, $orientation) {\r\n    background: $start-color;\r\n  \r\n    @if $orientation== \"vertical\" {\r\n      background: -webkit-linear-gradient(top, $start-color, $end-color);\r\n      background: linear-gradient(to bottom, $start-color, $end-color);\r\n    } @else if $orientation== \"horizontal\" {\r\n      background: -webkit-linear-gradient(left, $start-color, $end-color);\r\n      background: linear-gradient(to right, $start-color, $end-color);\r\n    } @else {\r\n      background: -webkit-radial-gradient(\r\n        center,\r\n        ellipse cover,\r\n        $start-color,\r\n        $end-color\r\n      );\r\n      background: radial-gradient(ellipse at center, $start-color, $end-color);\r\n    }\r\n  }\r\n  \r\n  //-------------------- Background color and color --------------------//\r\n  @function solid-lighten($color, $percentage) {\r\n    @return lighten($color, (1-$percentage) * 5%);\r\n  }\r\n  \r\n  @function solid-darken($color, $percentage) {\r\n    @return darken($color, (1-$percentage) * 5%);\r\n  }\r\n  \r\n  @mixin rgba($type, $color, $percentage, $shade: ligthen) {\r\n    @if $shade==lighten {\r\n      @if $type==color {\r\n        color: solid-lighten($color, $percentage);\r\n        color: rgba($color, $percentage);\r\n      }\r\n  \r\n      @if $type==bg {\r\n        background-color: solid-lighten($color, $percentage);\r\n        background-color: rgba($color, $percentage);\r\n      }\r\n    } @else {\r\n      @if $type==color {\r\n        color: solid-darken($color, $percentage);\r\n        color: rgba($color, $percentage);\r\n      }\r\n  \r\n      @if $type==bg {\r\n        background-color: solid-darken($color, $percentage);\r\n        background-color: rgba($color, $percentage);\r\n      }\r\n    }\r\n  }\r\n  \r\n  //-------------------- Animation --------------------//\r\n  @mixin animation($animationname, $time) {\r\n    animation: $animationname $time;\r\n    -webkit-animation: $animationname $time;\r\n    -moz-animation-name: $animationname $time;\r\n  }\r\n  \r\n  @mixin animation-name($animationname) {\r\n    animation-name: $animationname;\r\n    -webkit-animation-name: $animationname;\r\n    -moz-animation-name: $animationname;\r\n  }\r\n  \r\n  @mixin animation-duration($time) {\r\n    animation-duration: $time;\r\n    -webkit-animation-duration: $time;\r\n    -moz-animation-duration: $time;\r\n  }\r\n  \r\n  @mixin animation-timing($timing) {\r\n    animation-timing-function: $timing;\r\n    -webkit-animation-timing-function: $timing;\r\n    -moz-animation-timing-function: $timing;\r\n  }\r\n  \r\n  @mixin animation-delay($delay) {\r\n    animation-delay: $delay;\r\n    -webkit-animation-delay: $delay;\r\n    -moz-animation-delay: $delay;\r\n  }\r\n  \r\n  @mixin animation-count($count) {\r\n    animation-iteration-count: $count;\r\n    -webkit-animation-iteration-count: $count;\r\n    -moz-animation-iteration-count: $count;\r\n  }\r\n  \r\n  @mixin animation-direction($direction) {\r\n    animation-direction: $direction;\r\n    -webkit-animation-direction: $direction;\r\n  }\r\n  \r\n  @mixin animation-fill($fill-mode) {\r\n    animation-fill-mode: $fill-mode;\r\n    -webkit-animation-fill-mode: $fill-mode;\r\n    -moz-animation-fill-mode: $fill-mode;\r\n  }\r\n  \r\n  @mixin backface-visibility($arguments) {\r\n    -webkit-backface-visibility: $arguments;\r\n    -moz-backface-visibility: $arguments;\r\n    -ms-backface-visibility: $arguments;\r\n    -o-backface-visibility: $arguments;\r\n    backface-visibility: $arguments;\r\n  }\r\n  \r\n  //-------------------- Box shadow --------------------//\r\n  @mixin box-shadow($val...) {\r\n    -webkit-box-shadow: $val;\r\n    -moz-box-shadow: $val;\r\n    box-shadow: $val;\r\n  }\r\n  \r\n  //--------------------  Center vertically and/or horizontally --------------------//\r\n  @mixin center($xy: xy) {\r\n    @if $xy==xy {\r\n      left: 50%;\r\n      top: 50%;\r\n      bottom: auto;\r\n      right: auto;\r\n      @include transform(translateX(-50%) translateY(-50%));\r\n    } @else if $xy==x {\r\n      left: 50%;\r\n      right: auto;\r\n      @include transform(translateX(-50%));\r\n    } @else if $xy==y {\r\n      top: 50%;\r\n      bottom: auto;\r\n      @include transform(translateY(-50%));\r\n    }\r\n  }\r\n  \r\n  //-------------------- Responsive --------------------//\r\n  @mixin desktop {\r\n    @media (max-width: #{$large-device-width}) {\r\n      @content;\r\n    }\r\n  }\r\n  \r\n  @mixin tablet {\r\n    @media (max-width: #{$medium-device-width}) {\r\n      @content;\r\n    }\r\n  }\r\n  \r\n  @mixin mobile {\r\n    @media (max-width: #{$small-device-width}) {\r\n      @content;\r\n    }\r\n  }\r\n  \r\n  @mixin extra-small-mobile {\r\n    @media (max-width: #{$extra-small-device-width}) {\r\n      @content;\r\n    }\r\n  }"],"file":"_mixin.css"}